/*
* Copyright (c) 2005 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  application resource file
*
*/



// -----------------------------------------------------------------------------
// FOUR-LETTER RESOURCE IDENTIFIER
// -----------------------------------------------------------------------------
//
NAME MUSH


// -----------------------------------------------------------------------------
// INCLUDE FILES
// -----------------------------------------------------------------------------
//
#include "musui.hrh"
#include <mus.loc> // localization
#include <musoperator.loc> //localization

#include <musuiicons.mbg>
#include <musuitoolbaricons.mbg>
#include <appinfo.rh>
#include <data_caging_paths_strings.hrh>
#include <eikon.rh>
#include <avkon.rsg>
#include <avkon.mbg>
#include <avkon.rh>
#include <avkon.hrh>
#include <avkon.loc>
#include <drmcommon.loc>

#include <aknsconstants.hrh>
#include <incallmenuandsoftkeys.loc>
// -----------------------------------------------------------------------------
// RESOURCE DEFINITIONS
// -----------------------------------------------------------------------------
//
RESOURCE RSS_SIGNATURE { }

RESOURCE TBUF { buf = "MUSUI"; }

RESOURCE EIK_APP_INFO
    {
    }


// -----------------------------------------------------------------------------
// CONSTANTS
// -----------------------------------------------------------------------------
//
#define KMyBitmapRomFile "Z:\\resource\\apps\\musuiicons.mif"
#define KMyBitmapRamFile "C:\\resource\\apps\\musuiicons.mif"

RESOURCE LOCALISABLE_APP_INFO r_localisable_app_info
    {
    short_caption = qtn_apps_msh_grid;
    caption_and_icon = CAPTION_AND_ICON_INFO
        {
        caption = qtn_apps_msh_list;
        number_of_icons = 1;
        icon_file = APP_BITMAP_DIR"\\musui_aif.mif";
        };
    }


// -----------------------------------------------------------------------------
// Hotkeys defined for application
// -----------------------------------------------------------------------------
//
RESOURCE HOTKEYS r_musui_hotkeys
    {
    control =
        {
        HOTKEY { command = EEikCmdExit; key = 'e'; }
        };
    }


// -----------------------------------------------------------------------------
// Items for general menu
// -----------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_musui_general_menu
    {
    items =
        {
        MENU_ITEM { command = EMusuiGenCmdExit; txt = qtn_options_exit; }
        };
    }


// -----------------------------------------------------------------------------
// View-resource definition for general view
// -----------------------------------------------------------------------------
//
RESOURCE AVKON_VIEW r_musui_generalview
    {
    menubar = r_musui_generalview_menubar;
    toolbar = r_mus_toolbar;
    cba     = R_AVKON_SOFTKEYS_OPTIONS_EXIT;
    }


// -----------------------------------------------------------------------------
// View-resource definition for null view
// -----------------------------------------------------------------------------
//
RESOURCE AVKON_VIEW r_musui_nullview
    {
    menubar = r_musui_generalview_menubar;
    cba     = R_AVKON_SOFTKEYS_OPTIONS_EXIT;
    }


// -----------------------------------------------------------------------------
// Menubar definition for general view
// -----------------------------------------------------------------------------
//
RESOURCE MENU_BAR r_musui_generalview_menubar
    {
    titles =
        {
        MENU_TITLE { menu_pane = r_musui_general_menu;  txt = "--"; },
        MENU_TITLE { menu_pane = r_musui_generalview_menu; txt = "--"; }
        };
    }


// -----------------------------------------------------------------------------
// Items for menupane in general view
// -----------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_musui_generalview_menu
    {
    items =
        {
        MENU_ITEM { command = EMusuiCmdAppTest; txt = "Test"; } // TODO: Fixme
        };
    }


// -----------------------------------------------------------------------------
// View-resource definition for live sharing view
// -----------------------------------------------------------------------------
//
RESOURCE AVKON_VIEW r_musui_view
    {
    menubar = r_musui_view_menubar;
//    toolbar = r_mus_toolbar;
    cba     = r_musui_view_cba;
    }


// -----------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
//
RESOURCE CBA r_musui_view_cba
    {
    buttons=
        {
        CBA_BUTTON
            {
            txt = text_softkey_option;
            id = EAknSoftkeyOptions;
            },
        CBA_BUTTON
            {
            txt = qtn_msh_softkey_stop;
            id = EAknSoftkeyExit;
            },
        CBA_BUTTON
            {
            //txt = text_softkey_option;  // qgn_prop_msk_select;
            id = EEikBidBlank;  // EAknSoftkeyOptions;
            }
        };
    }


// -----------------------------------------------------------------------------
// Operator Specific Middle softkeys
// -----------------------------------------------------------------------------
//
RESOURCE CBA_BUTTON r_musui_view_ops_msk_ihf_off
    {
    id = EMusuiCmdViewHandset;
    txt = qtn_msh_msk_ihf_off;
    }

RESOURCE CBA_BUTTON r_musui_view_ops_msk_ihf_on
    {
    id = EMusuiCmdViewLoadspeaker;
    txt = qtn_msh_msk_ihf_on;
    }

RESOURCE CBA_BUTTON r_musui_view_msk_ok
    {
    id = EMusuiCmdViewMiddleSoftkeyOk;
    txt = qtn_msh_msk_done;
    }


// -----------------------------------------------------------------------------
// Menubar definition for live sharing view
// -----------------------------------------------------------------------------
//
RESOURCE MENU_BAR r_musui_view_menubar
    {
    titles =
        {
        MENU_TITLE { menu_pane = r_musui_general_menu;  txt = "--"; },
        MENU_TITLE { menu_pane = r_musui_view_menu; txt = "--"; }
        };
    }
    

// -----------------------------------------------------------------------------
// Items for menupane in live sharing view
// -----------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_musui_view_menu
    {
    items =
        {
        MENU_ITEM
            {
            command = EMusuiCmdViewReplay;
            txt = qtn_msh_shareview_softk_replay;
            },
        MENU_ITEM
            {
            command = EMusuiCmdViewShareVideo;
            txt = qtn_msh_options_gen_shareclip;
            },
        MENU_ITEM
            {
            command = EMusuiCmdViewShareImage;
            txt = qtn_msh_options_gen_shareimage;
            },
        MENU_ITEM
            {
            command = EMusuiCmdViewShareLive;
            txt = qtn_msh_options_gen_sharelive;
            },
        MENU_ITEM
            {
            command = EMusuiCmdViewAudioNormal;
            txt = qtn_msh_options_clip_audio_normal;
            },
        MENU_ITEM
            {
            command = EMusuiCmdViewAudioMute;
            txt = qtn_msh_options_clip_audio_mute;
            },
        MENU_ITEM
            {
            command = EMusuiCmdToolbarZoom;
            txt = qtn_msh_tooltip_zoom; // Adjust zoom
            },
        MENU_ITEM
            {
            command = EMusuiCmdToolbarBrightness;
            txt = qtn_msh_tooltip_brightness; // Adjust brightness
            },
        MENU_ITEM
            {
            command = EMusuiCmdViewFullScreen;
            txt = qtn_msh_options_fullscreen;
            },   
        MENU_ITEM
            {
            command = EMusuiCmdViewZoom;
            txt = qtn_msh_options_zoom;
            },    
        MENU_ITEM
            {
            command = EMusuiCmdViewBrightness;
            txt = qtn_msh_options_brightness;
            },
        MENU_ITEM
            {
            command = EMusuiCmdRecord;
            txt = qtn_msh_options_rec_start;
            },
        MENU_ITEM
            {
            command = EMusuiCmdStopRecording;
            txt = qtn_msh_options_rec_stop;
            },
        MENU_ITEM
            {
            command = EMusuiCmdViewMicrophoneMute;
            txt = qtn_incal_mute_option;
            },
        MENU_ITEM
            {
            command = EMusuiCmdViewMicrophoneUnmute;
            txt = qtn_incal_unmute_option;
            },
        MENU_ITEM 
            {
            command = EMusuiCmdViewEndActiveCall;
            txt =  qtn_incal_drop_option;
            },
#ifdef __SERIES60_HELP            
        MENU_ITEM
            {
            command = EAknCmdHelp;
            txt = qtn_options_help;
            }
#endif  // __SERIES60_HELP
        };
    }


// -----------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_mus_navi_media_icon_layout_size
    {
    l = 0; t = 0; W = 13; H = 16;
    }


// -----------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
//
RESOURCE AVKON_LAYOUT_TEXT r_mus_navi_media_text_left_layout
    {
    font = ELatinPlain12;
    C = 10;
    l = 43;
    r = 4;
    B = 13;
    W = 73;
    J = ELayoutAlignLeft;
    }


// -----------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
//
RESOURCE AVKON_LAYOUT_TEXT r_mus_navi_media_text_right_layout
    {
    font = ELatinPlain12;
    C = 0;
    l = 43;
    r = 4;
    B = 13;
    W = 73;
    J = ELayoutAlignRight;
    }


// -----------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
//
RESOURCE AKN_ICON_ARRAY r_mus_navi_media_icon_array_rom
    {
    bmpfile = KMyBitmapRomFile; // HERE
    icons =
        {
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_forw;
                    maskId = EMbmMusuiiconsQgn_indi_video_forw_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_pause;
                    maskId = EMbmMusuiiconsQgn_indi_video_pause_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_play;
                    maskId = EMbmMusuiiconsQgn_indi_video_play_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_record;
                    maskId = EMbmMusuiiconsQgn_indi_video_record_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_record_not;
                    maskId = EMbmMusuiiconsQgn_indi_video_record_not_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_rew;
                    maskId = EMbmMusuiiconsQgn_indi_video_rew_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_stop;
                    maskId = EMbmMusuiiconsQgn_indi_video_stop_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_wait1;
                    maskId = EMbmMusuiiconsQgn_indi_video_wait1_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_wait2;
                    maskId = EMbmMusuiiconsQgn_indi_video_wait2_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_wait3;
                    maskId = EMbmMusuiiconsQgn_indi_video_wait3_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_wait4;
                    maskId = EMbmMusuiiconsQgn_indi_video_wait4_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_wait5;
                    maskId = EMbmMusuiiconsQgn_indi_video_wait5_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_wait6;
                    maskId = EMbmMusuiiconsQgn_indi_video_wait6_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_wait7;
                    maskId = EMbmMusuiiconsQgn_indi_video_wait7_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_wait8;
                    maskId = EMbmMusuiiconsQgn_indi_video_wait8_mask; }
        };
    }

 // -----------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
//
RESOURCE AKN_ICON_ARRAY r_mus_navi_media_icon_array_ram
    {
    bmpfile = KMyBitmapRamFile; // HERE
    icons =
        {
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_forw;
                    maskId = EMbmMusuiiconsQgn_indi_video_forw_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_pause;
                    maskId = EMbmMusuiiconsQgn_indi_video_pause_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_play;
                    maskId = EMbmMusuiiconsQgn_indi_video_play_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_record;
                    maskId = EMbmMusuiiconsQgn_indi_video_record_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_record_not;
                    maskId = EMbmMusuiiconsQgn_indi_video_record_not_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_rew;
                    maskId = EMbmMusuiiconsQgn_indi_video_rew_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_stop;
                    maskId = EMbmMusuiiconsQgn_indi_video_stop_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_wait1;
                    maskId = EMbmMusuiiconsQgn_indi_video_wait1_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_wait2;
                    maskId = EMbmMusuiiconsQgn_indi_video_wait2_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_wait3;
                    maskId = EMbmMusuiiconsQgn_indi_video_wait3_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_wait4;
                    maskId = EMbmMusuiiconsQgn_indi_video_wait4_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_wait5;
                    maskId = EMbmMusuiiconsQgn_indi_video_wait5_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_wait6;
                    maskId = EMbmMusuiiconsQgn_indi_video_wait6_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_wait7;
                    maskId = EMbmMusuiiconsQgn_indi_video_wait7_mask; },
        AKN_ICON  { iconId = EMbmMusuiiconsQgn_indi_video_wait8;
                    maskId = EMbmMusuiiconsQgn_indi_video_wait8_mask; }
        };
    }

///////////////////////////////////////////////////LG///////////////////////////////////////////
// -----------------------------------------------------------------------------
// Toolbar for non-touch mode
// -----------------------------------------------------------------------------
//
RESOURCE AVKON_TOOLBAR r_mus_toolbar_nontouch
    {
    //KAknToolbarFlexiblePosition
    //3.2.3 -> KAknToolbarWithoutCba
    //5.0   -> KAknToolbarFixed
    flags = KAknToolbarWithoutCba | KAknToolbarFloatingUnTransparent;

    items =
        {
        // ****************************************************************** //
        TBAR_CTRL   // Sending Live/Clip & Receiving: Activate Volume Mode
            {
            type = EAknCtButton;
            id = EMusuiCmdToolbarVolume;
            control = AVKON_BUTTON
                {
                flags = KAknButtonSizeFitText ;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        //txt = qtn_msh_tooltip_volume;   // Adjust call volume
                        helptxt = qtn_msh_tooltip_volume;
                        // TODO: ROM/RAM:
                        bmpfile = "Z:\\Resource\\apps\\musuitoolbaricons.mif";
                        bmpid   = EMbmMusuitoolbariconsQgn_indi_tb_call_volume;
                        bmpmask = EMbmMusuitoolbariconsQgn_indi_tb_call_volume_mask;
                        }
                    };
                };
            },
          // ****************************************************************** //
                                                                                                                                                
          TBAR_CTRL   // Receiving: Change to full screen mode
              {
              type = EAknCtButton;
              id = EMusuiCmdToolbarFullScreen;
              control = AVKON_BUTTON
                  {
                  flags = KAknButtonSizeFitText ;
                  states =
                      {
                      AVKON_BUTTON_STATE
                          {
                          //txt = qtn_msh_tooltip_fullscreen; // View in full screen mode
                          helptxt = qtn_msh_tooltip_fullscreen; 
                          // TODO: ROM/RAM:
                          bmpfile = "Z:\\Resource\\apps\\musuitoolbaricons.mif";
                          bmpid   = EMbmMusuitoolbariconsQgn_indi_tb_fullscreen;
                          bmpmask = EMbmMusuitoolbariconsQgn_indi_tb_fullscreen_mask;
//                          extension = r_mus_fullscreen_button_state_extension;
                          }
                      };
                  };
              },
                                                                                                                                                
        // ****************************************************************** //
       
        TBAR_CTRL   // Sending Live: Pause sharing <=> Toggled
            {
            type = EAknCtButton;
            id = EMusuiCmdToolbarPauseLive;
            control = AVKON_BUTTON
                {
                flags = KAknButtonSizeFitText;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        //txt = qtn_msh_tooltip_pause_live;   // Pause sharing
                        helptxt = qtn_msh_tooltip_pause_live;
                        // TODO: ROM/RAM:
                        bmpfile = "Z:\\Resource\\apps\\musuitoolbaricons.mif";
                        bmpid   = EMbmMusuitoolbariconsQgn_indi_tb_pause_send_video;
                        bmpmask = EMbmMusuitoolbariconsQgn_indi_tb_pause_send_video_mask;
//                        extension = r_mus_pause_send_video_button_state_extension;
                        }
                    };
                };
            },
        TBAR_CTRL   // Sending Live/Clip: Un-pause sharing <=> Toggled
            {
            type = EAknCtButton;
            id = EMusuiCmdToolbarUnPauseLive;
            control = AVKON_BUTTON
                {
                flags = KAknButtonSizeFitText;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        //txt = qtn_msh_tooltip_unpause_live;
                        helptxt = qtn_msh_tooltip_unpause_live;
                        // TODO: ROM/RAM
                        bmpfile = "Z:\\Resource\\apps\\musuitoolbaricons.mif";
                        bmpid   = EMbmMusuitoolbariconsQgn_indi_tb_video;
                        bmpmask = EMbmMusuitoolbariconsQgn_indi_tb_video_mask;
//                        extension = r_mus_video_button_state_extension;
                        }
                    };
                };
            },
        // ****************************************************************** //
                                            
        TBAR_CTRL   // Sending Clip: Pause sharing <=> Toggled
            {
            type = EAknCtButton;
            id = EMusuiCmdToolbarPause;
            control = AVKON_BUTTON
                {
                flags = KAknButtonSizeFitText ;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        //txt = qtn_msh_tooltip_pause_live;   // Pause sharing
                        helptxt = qtn_msh_tooltip_pause_live;
                        // TODO: ROM/RAM:
                        bmpfile = "Z:\\Resource\\apps\\musuitoolbaricons.mif";
                        bmpid   = EMbmMusuitoolbariconsQgn_indi_cams_tb_rec_pause;
                        bmpmask = EMbmMusuitoolbariconsQgn_indi_cams_tb_rec_pause_mask;
 //                       extension = r_mus_rec_pause_button_state_extension;
                        }
                    };
                };
            },
        TBAR_CTRL   // Sending Live/Clip: Un-pause sharing <=> Toggled
            {
            type = EAknCtButton;
            id = EMusuiCmdToolbarUnPause;
            control = AVKON_BUTTON
                {
                flags = KAknButtonSizeFitText ;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        //txt = qtn_msh_tooltip_unpause_live;
                        helptxt = qtn_msh_tooltip_unpause_live;
                        // TODO: ROM/RAM
                        bmpfile = "Z:\\Resource\\apps\\musuitoolbaricons.mif";
                        bmpid   = EMbmMusuitoolbariconsQgn_indi_tb_play;
                        bmpmask = EMbmMusuitoolbariconsQgn_indi_tb_play_mask;
 //                       extension = r_mus_play_button_state_extension;
                        }
                    };
                };
            },

        // ****************************************************************** //
       TBAR_CTRL   // Sending Clip: Activate fast forward / reverse mode
           {
           type = EAknCtButton;
           id = EMusuiCmdToolbarFFRev;
           control = AVKON_BUTTON
               {
               flags = KAknButtonSizeFitText ;
               states =
                   {
                   AVKON_BUTTON_STATE
                       {
                       //txt = qtn_msh_tooltip_ffrev; // Fast forward or rewind clip
                       helptxt = qtn_msh_tooltip_ffrev;
                       bmpfile = "Z:\\Resource\\apps\\musuitoolbaricons.mif";  // Only ROM . RAM is unofficial
                       bmpid   = EMbmMusuitoolbariconsQgn_indi_tb_ffw_frew;
                       bmpmask = EMbmMusuitoolbariconsQgn_indi_tb_ffw_frew_mask;
                       },
                   AVKON_BUTTON_STATE
                       {
                       flags = KAknButtonStateHasLatchedFrame;
                       //txt = qtn_msh_tooltip_ffrev;
                       helptxt = qtn_msh_tooltip_ffrev;
                       bmpfile = "Z:\\Resource\\apps\\musuitoolbaricons.mif";  // Only ROM . RAM is unofficial
                       bmpid   = EMbmMusuitoolbariconsQgn_indi_tb_ffw_frew;
                       // bmpmask = 0x8000;  /*32768, tumma*/
                       bmpmask = 0x7FFF;   /*32767, vaalea*/
                       }
                   };
               };
           },
       // ****************************************************************** //
       TBAR_CTRL   // Sending Live: Activate zoom mode
           {
           type = EAknCtButton;
           id = EMusuiCmdToolbarZoom;
           control = AVKON_BUTTON
               {
               flags = KAknButtonSizeFitText ;
               states =
                   {
                   AVKON_BUTTON_STATE
                       {
                       //txt = qtn_msh_tooltip_zoom; // Adjust zoom
                       helptxt = qtn_msh_tooltip_zoom;
                       bmpfile = "Z:\\Resource\\apps\\musuitoolbaricons.mif";  // Only ROM . RAM is unofficial
                       bmpid   = EMbmMusuitoolbariconsQgn_indi_tb_zoom;
                       bmpmask = EMbmMusuitoolbariconsQgn_indi_tb_zoom_mask;
                       },
                   AVKON_BUTTON_STATE
                       {
                       flags = KAknButtonStateHasLatchedFrame;
                       //txt = qtn_msh_tooltip_zoom; // Adjust zoom
                       helptxt = qtn_msh_tooltip_zoom;
                       bmpfile = "Z:\\Resource\\apps\\musuitoolbaricons.mif";  // Only ROM . RAM is unofficial
                       bmpid   = EMbmMusuitoolbariconsQgn_indi_tb_zoom;    // TODO: Correct bitmap!!!
                       // bmpmask = 0x8000;  /*32768, tumma*/     
                       bmpmask = 0x7FFF;   /*32767, vaalea*/
                       }
                    };
                };
            },
       // ****************************************************************** //
       TBAR_CTRL   // Sending Live: Activate brightness mode
            {
            type = EAknCtButton;
            id = EMusuiCmdToolbarBrightness;
            control = AVKON_BUTTON
                {
                flags = KAknButtonSizeFitText;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        //txt = qtn_msh_tooltip_brightness; // Adjust brightness
                        helptxt = qtn_msh_tooltip_brightness;
                        bmpfile = "Z:\\Resource\\apps\\musuitoolbaricons.mif";  // Only ROM . RAM is unofficial
                        bmpid   = EMbmMusuitoolbariconsQgn_indi_tb_brightness;
                        bmpmask = EMbmMusuitoolbariconsQgn_indi_tb_brightness_mask;
                        },
                    AVKON_BUTTON_STATE
                        {
                        flags = KAknButtonStateHasLatchedFrame;
                        //txt = qtn_msh_tooltip_brightness; // Adjust brightness
                        helptxt = qtn_msh_tooltip_brightness;
                        bmpfile = "Z:\\Resource\\apps\\musuitoolbaricons.mif";  // Only ROM . RAM is unofficial
                        bmpid   = EMbmMusuitoolbariconsQgn_indi_tb_brightness;
                        // bmpmask = 0x8000;  /*32768, tumma*/
                        bmpmask = 0x7FFF;   /*32767, vaalea*/
                        }
                    };
                };
            },
        // ****************************************************************** //
                
        TBAR_CTRL   // Sending Live/Clip & Receiving: Mute microphone <=> Toggled
            {
            type = EAknCtButton;
            id = EMusuiCmdToolbarMute;
            control = AVKON_BUTTON
                {
                flags = KAknButtonSizeFitText ;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        //txt = qtn_msh_tooltip_mute;     // Mute Microphone
                        helptxt = qtn_msh_tooltip_mute;
                        bmpfile = "Z:\\Resource\\apps\\musuitoolbaricons.mif";  // Only ROM . RAM is unofficial
                        bmpid   = EMbmMusuitoolbariconsQgn_indi_tb_microphone_mute;
                        bmpmask = EMbmMusuitoolbariconsQgn_indi_tb_microphone_mute_mask;
//                        extension = r_mus_microphone_mute_button_state_extension;
                        }
                    };
                };
            },
        TBAR_CTRL   // Sending Live/Clip & Receiving: Unmute microphone <=> Toggled
            {
            type = EAknCtButton;
            id = EMusuiCmdToolbarUnmute;
            control = AVKON_BUTTON
                {
                flags = KAknButtonSizeFitText ;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        //txt = qtn_msh_tooltip_unmute;     // Unmute Microphone
                        helptxt = qtn_msh_tooltip_unmute;
                        bmpfile = "Z:\\Resource\\apps\\musuitoolbaricons.mif";  // Only ROM . RAM is unofficial
                        bmpid   = EMbmMusuitoolbariconsQgn_indi_tb_microphone_unmute;
                        bmpmask = EMbmMusuitoolbariconsQgn_indi_tb_microphone_unmute_mask;
 //                       extension = r_mus_microphone_unmute_button_state_extension;
                        }
                    };
                };
            },
           
        // ****************************************************************** //
        
        TBAR_CTRL   // Sending LiveClip & Receiving: Speaker off <=> Toggled
            {
            type = EAknCtButton;
            id = EMusuiCmdToolbarSpeakerOff;
            control = AVKON_BUTTON
                {
                flags = KAknButtonSizeFitText ;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        //txt = qtn_msh_tooltip_ihf_off;     // Loudspeaker off
                        helptxt = qtn_msh_tooltip_ihf_off;
                        bmpfile = "Z:\\Resource\\apps\\musuitoolbaricons.mif";  // Only ROM . RAM is unofficial
                        bmpid   = EMbmMusuitoolbariconsQgn_indi_tb_ihf_off;
                        bmpmask = EMbmMusuitoolbariconsQgn_indi_tb_ihf_off_mask;
 //                       extension = r_mus_ihf_off_button_state_extension;
                        }
                    };
                };
            },
        TBAR_CTRL   // Sending Live/Clip & Receiving: Speaker on <=> Toggled
            {
            type = EAknCtButton;
            id = EMusuiCmdToolbarSpeakerOn;
            control = AVKON_BUTTON
                {
                flags = KAknButtonSizeFitText;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        //txt = qtn_msh_tooltip_ihf_on;     // Loudspeaker on
                        helptxt = qtn_msh_tooltip_ihf_on;
                        bmpfile = "Z:\\Resource\\apps\\musuitoolbaricons.mif";  // Only ROM . RAM is unofficial
                        bmpid   = EMbmMusuitoolbariconsQgn_indi_tb_ihf_on;
                        bmpmask = EMbmMusuitoolbariconsQgn_indi_tb_ihf_on_mask;
 //                       extension = r_mus_ihf_on_button_state_extension;
                        }
                    };
                };
            }
        };
    }
///////////////////////////////////////////////////LG///////////////////////////////////////////
         
 

// -----------------------------------------------------------------------------
// Toolbar
// -----------------------------------------------------------------------------
//
RESOURCE AVKON_TOOLBAR r_mus_toolbar
    {
    flags = KAknToolbarFixed;

    items =
        {
        // ****************************************************************** //
																																		        
	      TBAR_CTRL   // Receiving: Change to full screen mode
	          {
	          type = EAknCtButton;
	          id = EMusuiCmdToolbarFullScreen;
	          control = AVKON_BUTTON
	              {
	              flags = KAknButtonSizeFitText ;
	              states =
	                  {
	                  AVKON_BUTTON_STATE
	                      {
	                      //txt = qtn_msh_tooltip_fullscreen; // View in full screen mode
	                      helptxt = qtn_msh_tooltip_fullscreen; 
	                      // TODO: ROM/RAM:
	                      bmpfile = "Z:\\Resource\\apps\\musuitoolbaricons.mif";
	                      bmpid   = EMbmMusuitoolbariconsQgn_indi_tb_fullscreen;
	                      bmpmask = EMbmMusuitoolbariconsQgn_indi_tb_fullscreen_mask;
	                      extension = r_mus_fullscreen_button_state_extension;
	                      }
	                  };
	              };
	          },
																																		        
        // ****************************************************************** //
       
        TBAR_CTRL   // Sending Live: Pause sharing <=> Toggled
            {
            type = EAknCtButton;
            id = EMusuiCmdToolbarPauseLive;
            control = AVKON_BUTTON
                {
                flags = KAknButtonSizeFitText;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        //txt = qtn_msh_tooltip_pause_live;   // Pause sharing
                        helptxt = qtn_msh_tooltip_pause_live;
                        // TODO: ROM/RAM:
                        bmpfile = "Z:\\Resource\\apps\\musuitoolbaricons.mif";
                        bmpid   = EMbmMusuitoolbariconsQgn_indi_tb_pause_send_video;
                        bmpmask = EMbmMusuitoolbariconsQgn_indi_tb_pause_send_video_mask;
                        extension = r_mus_pause_send_video_button_state_extension;
                        }
                    };
                };
            },
        TBAR_CTRL   // Sending Live/Clip: Un-pause sharing <=> Toggled
            {
            type = EAknCtButton;
            id = EMusuiCmdToolbarUnPauseLive;
            control = AVKON_BUTTON
                {
                flags = KAknButtonSizeFitText;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        //txt = qtn_msh_tooltip_unpause_live;
                        helptxt = qtn_msh_tooltip_unpause_live;
                        // TODO: ROM/RAM
                        bmpfile = "Z:\\Resource\\apps\\musuitoolbaricons.mif";
                        bmpid   = EMbmMusuitoolbariconsQgn_indi_tb_video;
                        bmpmask = EMbmMusuitoolbariconsQgn_indi_tb_video_mask;
                        extension = r_mus_video_button_state_extension;
                        }
                    };
                };
            },
        // ****************************************************************** //
									        
        TBAR_CTRL   // Sending Clip: Pause sharing <=> Toggled
            {
            type = EAknCtButton;
            id = EMusuiCmdToolbarPause;
            control = AVKON_BUTTON
                {
                flags = KAknButtonSizeFitText ;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        //txt = qtn_msh_tooltip_pause_live;   // Pause sharing
                        helptxt = qtn_msh_tooltip_pause_live;
                        // TODO: ROM/RAM:
                        bmpfile = "Z:\\Resource\\apps\\musuitoolbaricons.mif";
                        bmpid   = EMbmMusuitoolbariconsQgn_indi_cams_tb_rec_pause;
                        bmpmask = EMbmMusuitoolbariconsQgn_indi_cams_tb_rec_pause_mask;
                        extension = r_mus_rec_pause_button_state_extension;
                        }
                    };
                };
            },
        TBAR_CTRL   // Sending Live/Clip: Un-pause sharing <=> Toggled
            {
            type = EAknCtButton;
            id = EMusuiCmdToolbarUnPause;
            control = AVKON_BUTTON
                {
                flags = KAknButtonSizeFitText ;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        //txt = qtn_msh_tooltip_unpause_live;
                        helptxt = qtn_msh_tooltip_unpause_live;
                        // TODO: ROM/RAM
                        bmpfile = "Z:\\Resource\\apps\\musuitoolbaricons.mif";
                        bmpid   = EMbmMusuitoolbariconsQgn_indi_tb_play;
                        bmpmask = EMbmMusuitoolbariconsQgn_indi_tb_play_mask;
                        extension = r_mus_play_button_state_extension;
                        }
                    };
                };
            },

        // ****************************************************************** //
        
        TBAR_CTRL   // Sending Live/Clip & Receiving: Mute microphone <=> Toggled
            {
            type = EAknCtButton;
            id = EMusuiCmdToolbarMute;
            control = AVKON_BUTTON
                {
                flags = KAknButtonSizeFitText ;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        //txt = qtn_msh_tooltip_mute;     // Mute Microphone
                        helptxt = qtn_msh_tooltip_mute;
                        bmpfile = "Z:\\Resource\\apps\\musuitoolbaricons.mif";  // Only ROM . RAM is unofficial
                        bmpid   = EMbmMusuitoolbariconsQgn_indi_tb_microphone_mute;
                        bmpmask = EMbmMusuitoolbariconsQgn_indi_tb_microphone_mute_mask;
                        extension = r_mus_microphone_mute_button_state_extension;
                        }
                    };
                };
            },
        TBAR_CTRL   // Sending Live/Clip & Receiving: Unmute microphone <=> Toggled
            {
            type = EAknCtButton;
            id = EMusuiCmdToolbarUnmute;
            control = AVKON_BUTTON
                {
                flags = KAknButtonSizeFitText ;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        //txt = qtn_msh_tooltip_unmute;     // Unmute Microphone
                        helptxt = qtn_msh_tooltip_unmute;
                        bmpfile = "Z:\\Resource\\apps\\musuitoolbaricons.mif";  // Only ROM . RAM is unofficial
                        bmpid   = EMbmMusuitoolbariconsQgn_indi_tb_microphone_unmute;
                        bmpmask = EMbmMusuitoolbariconsQgn_indi_tb_microphone_unmute_mask;
                        extension = r_mus_microphone_unmute_button_state_extension;
                        }
                    };
                };
            },
           
        // ****************************************************************** //
        
        TBAR_CTRL   // Sending LiveClip & Receiving: Speaker off <=> Toggled
            {
            type = EAknCtButton;
            id = EMusuiCmdToolbarSpeakerOff;
            control = AVKON_BUTTON
                {
                flags = KAknButtonSizeFitText ;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        //txt = qtn_msh_tooltip_ihf_off;     // Loudspeaker off
                        helptxt = qtn_msh_tooltip_ihf_off;
                        bmpfile = "Z:\\Resource\\apps\\musuitoolbaricons.mif";  // Only ROM . RAM is unofficial
                        bmpid   = EMbmMusuitoolbariconsQgn_indi_tb_ihf_off;
                        bmpmask = EMbmMusuitoolbariconsQgn_indi_tb_ihf_off_mask;
                        extension = r_mus_ihf_off_button_state_extension;
                        }
                    };
                };
            },
        TBAR_CTRL   // Sending Live/Clip & Receiving: Speaker on <=> Toggled
            {
            type = EAknCtButton;
            id = EMusuiCmdToolbarSpeakerOn;
            control = AVKON_BUTTON
                {
                flags = KAknButtonSizeFitText;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        //txt = qtn_msh_tooltip_ihf_on;     // Loudspeaker on
                        helptxt = qtn_msh_tooltip_ihf_on;
                        bmpfile = "Z:\\Resource\\apps\\musuitoolbaricons.mif";  // Only ROM . RAM is unofficial
                        bmpid   = EMbmMusuitoolbariconsQgn_indi_tb_ihf_on;
                        bmpmask = EMbmMusuitoolbariconsQgn_indi_tb_ihf_on_mask;
                        extension = r_mus_ihf_on_button_state_extension;
                        }
                    };
                };
            }
        };
    }
          
 
    
// BUTTON STATE EXTENSION needed for skinning

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_mus_call_volume_button_state_extension 
    { 
    bmbSkinIdMajor= EAknsMajorGeneric; 
    bmbSkinIdMinor= EAknsMinorGenericQgnIndiTbCallVolume; 
    }
    
RESOURCE AVKON_BUTTON_STATE_EXTENSION r_mus_fullscreen_button_state_extension 
    { 
    bmbSkinIdMajor= EAknsMajorGeneric; 
    bmbSkinIdMinor= EAknsMinorGenericQgnIndiTbFullscreen; 
    }
    
RESOURCE AVKON_BUTTON_STATE_EXTENSION r_mus_pause_send_video_button_state_extension 
    { 
    bmbSkinIdMajor= EAknsMajorGeneric; 
    bmbSkinIdMinor= EAknsMinorGenericQgnIndiTbPauseSendVideo; 
    }
    
RESOURCE AVKON_BUTTON_STATE_EXTENSION r_mus_video_button_state_extension 
    { 
    bmbSkinIdMajor= EAknsMajorGeneric; 
    bmbSkinIdMinor= EAknsMinorGenericQgnIndiTbVideo; 
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_mus_rec_pause_button_state_extension 
    { 
    bmbSkinIdMajor= EAknsMajorGeneric; 
    bmbSkinIdMinor= EAknsMinorGenericQgnIndiCamsTbRecPause; 
    }
    
RESOURCE AVKON_BUTTON_STATE_EXTENSION r_mus_play_button_state_extension 
    { 
    bmbSkinIdMajor= EAknsMajorGeneric; 
    bmbSkinIdMinor= EAknsMinorGenericQgnIndiTbPlay; 
    }                
    
RESOURCE AVKON_BUTTON_STATE_EXTENSION r_mus_ffw_frew_button_state_extension 
    { 
    bmbSkinIdMajor= EAknsMajorGeneric; 
    bmbSkinIdMinor= EAknsMinorGenericQgnIndiTbFfwFrew; 
    }
    
RESOURCE AVKON_BUTTON_STATE_EXTENSION r_mus_zoom_button_state_extension 
    { 
    bmbSkinIdMajor= EAknsMajorGeneric; 
    bmbSkinIdMinor= EAknsMinorGenericQgnIndiTbZoom; 
    }
    
RESOURCE AVKON_BUTTON_STATE_EXTENSION r_mus_brightness_button_state_extension 
    { 
    bmbSkinIdMajor= EAknsMajorGeneric; 
    bmbSkinIdMinor= EAknsMinorGenericQgnIndiTbBrightness; 
    }
    
RESOURCE AVKON_BUTTON_STATE_EXTENSION r_mus_microphone_mute_button_state_extension 
    { 
    bmbSkinIdMajor= EAknsMajorGeneric; 
    bmbSkinIdMinor= EAknsMinorGenericQgnIndiTbMicrophoneMute; 
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_mus_microphone_unmute_button_state_extension 
    { 
    bmbSkinIdMajor= EAknsMajorGeneric; 
    bmbSkinIdMinor= EAknsMinorGenericQgnIndiTbMicrophoneUnmute; 
    }
    
RESOURCE AVKON_BUTTON_STATE_EXTENSION r_mus_ihf_off_button_state_extension 
    { 
    bmbSkinIdMajor= EAknsMajorGeneric; 
    bmbSkinIdMinor= EAknsMinorGenericQgnIndiTbIhfOff; 
    }
    
RESOURCE AVKON_BUTTON_STATE_EXTENSION r_mus_ihf_on_button_state_extension 
    { 
    bmbSkinIdMajor= EAknsMajorGeneric; 
    bmbSkinIdMinor= EAknsMinorGenericQgnIndiTbIhfOn; 
    }    
        
// -----------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_mus_text_query_dialog
    {
    flags = EAknGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_OK_CANCEL;
    items =
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EGeneralQuery;
            control = AVKON_DATA_QUERY
                {
                layout = EDataLayout;
                control = EDWIN
                    {
                    flags = EEikEdwinOnlyASCIIChars;
                    avkon_flags = EAknEditorFlagLatinInputModesOnly;
                    default_input_mode = EAknEditorTextInputMode;
                    allowed_input_modes = EAknEditorTextInputMode |
                                          EAknEditorNumericInputMode;
                    };
                };
            }
        };
    }


// -----------------------------------------------------------------------------
// Resource for the address selection query.
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_mus_confirmation_query_dialog
    {
    flags = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_YES_NO;
    items =
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EMusConfirmationQuery;
            control = AVKON_CONFIRMATION_QUERY
                {
                layout = EConfirmationQueryLayout;
                };
            }
        };
    }


// -----------------------------------------------------------------------------
// Resource for the address selection query.
// -----------------------------------------------------------------------------
//
RESOURCE AVKON_LIST_QUERY r_mus_livesharingview_address_query
    {
    flags    = EGeneralQueryFlags;
    softkeys = R_AVKON_SOFTKEYS_OK_CANCEL;
    items =
        {
        AVKON_LIST_QUERY_DLG_LINE
            {
            control = AVKON_LIST_QUERY_CONTROL
                {
                listtype = EAknCtSinglePopupMenuListBox;
                listbox  = AVKON_LIST_QUERY_LIST
                    {
                    array_id = r_mus_livesharingview_address_array;
                    };
                heading  = qtn_msh_inviteview_select_query_hdr_txt;
                };
            }
        };
    }


// -----------------------------------------------------------------------------
// Resource for the address selection query array
// -----------------------------------------------------------------------------
//
RESOURCE ARRAY r_mus_livesharingview_address_array
    {
    items =
        {
        LBUF { txt = ""; }
        };
    }


// -----------------------------------------------------------------------------
// Resource for the inviting wait note
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_mus_view_inviting_wait_note
    {
    flags   = EAknWaitNoteFlags | EEikDialogFlagWait;
    buttons = R_AVKON_SOFTKEYS_CANCEL;
    items   =
        {
        DLG_LINE
            {
            type    = EAknCtNote;
            id      = EMusInvitingWaitNoteId;
            control = AVKON_NOTE
                {
                layout    = EWaitLayout;
                animation = R_QGN_GRAF_WAIT_BAR_ANIM;
                };
            }
        };
    }


// -----------------------------------------------------------------------------
// Resource for the camera activation wait note
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_mus_live_sharing_view_activate_camera_wait_note
    {
    flags   = EAknWaitNoteFlags | EEikDialogFlagWait;
    buttons = R_AVKON_SOFTKEYS_CANCEL;
    items   =
        {
        DLG_LINE
            {
            type    = EAknCtNote;
            id      = EMusActivateCameraWaitNoteId;
            control = AVKON_NOTE
                {
                layout    = EWaitLayout;
                animation = R_QGN_GRAF_WAIT_BAR_ANIM;
                };
            }
        };
    }


// -----------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_mus_view_transcoding_wait_note
    {
    flags   = EAknProgressNoteFlags;
    buttons = R_AVKON_SOFTKEYS_CANCEL;
    items   =
        {
        DLG_LINE
            {
            type    = EAknCtNote;
            id      = EMusTranscodingProgressNoteId;
            control = AVKON_NOTE
                {
                layout = EWaitLayout;
                };
            }
        };
    }


// -----------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mus_text_enter_address_dialog_prompt
    {
    buf = qtn_msh_inviteview_enter_sip;
    }


// -----------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mus_live_sharing_view_title
    {
    buf = qtn_msh_shareview_title;
    }


// -----------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mus_live_sharing_view_inviting_wait_note_txt
    {
    buf = qtn_msh_note_inviting;
    }


// -----------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mus_live_sharing_view_open_camera_lens_cover_wait_note_txt
    {
    buf = qtn_msh_note_change_camera_mode;
    }


// -----------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mus_registration_pending_wait_note_txt
    {
    //"Registering to SIP server"
    buf = qtn_msh_note_registration_pending;
    }


// -----------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mus_change_keypad_mode_txt
    {
	buf = qtn_msh_note_change_keypad_mode;
    }


// --------------------------------------------------------
// Resources related to video receive
// --------------------------------------------------------

RESOURCE TBUF r_mus_receive_view_note_incoming_video_request
    {
    buf = qtn_msh_note_incoming_video_request;   // "Accept sharing request from %U[35]?"
    }


// -----------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mus_receive_view_waiting_for_stream
    {
    buf = qtn_msh_note_waiting_for_stream;
    }


// -----------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mus_view_save_address_query_txt
    {
    buf = qtn_msh_query_save_contact;
    }


// -----------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mus_view_saved_filename
    {
    buf = qtn_msh_set_saving_filename;
    }


// -----------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mus_view_save_shared_video_query
    {
    buf = qtn_msh_query_save_clip;
    }


// -----------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mus_view_note_video_saved
    {
    buf = qtn_msh_note_video_saved;
    }


// -----------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mus_video_save_folder_name
    {
    buf = qtn_apps_mg_gs;
    }

// -----------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mus_progress_note_converting_clip
    {
    // "Converting clip for sharing"
    buf = qtn_msh_note_transcoding_video;
    }


// -----------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mus_view_note_transcoding_complete
    {
    // "Clip conversion complete"
    buf = qtn_msh_note_transcoding_complete;
    }


// -----------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mus_view_note_memorycard_problem
    {
    // "Memory card is not accessible. Phone memory will be used instead."
    buf = qtn_msh_note_memorycard_problem;
    }


// -----------------------------------------------------------------------------
// Error Note Strings
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mus_live_sharing_view_note_recipient_not_found
    {
    //  "Unable to find recipient"
    buf =  qtn_msh_note_recipient_not_found;
    }

RESOURCE TBUF r_mus_live_sharing_view_note_app_n_a
    {
    //  "Recipient does not have 'Video sharing' application"
    buf =  qtn_msh_note_app_n_a;
    }

RESOURCE TBUF r_mus_live_sharing_view_note_connection_rejected
    {
    //  "Invitation rejected by recipient"
    buf =  qtn_msh_note_connection_rejected;
    }

RESOURCE TBUF r_mus_live_sharing_view_note_no_response
    {
    //  "No response received to invitation"
    buf =  qtn_msh_note_no_response;
    }

RESOURCE TBUF r_mus_live_sharing_view_note_invitation_cancelled
    {
    //  "Invitation cancelled"
    buf =  qtn_msh_note_invitation_cancelled;
    }

RESOURCE TBUF r_mus_live_sharing_view_note_resource_n_a
    {
    //  "Application not available"
    buf =  qtn_msh_note_resource_n_a;
    }

RESOURCE TBUF r_mus_live_sharing_view_note_error_mediainit
    {
    //  "Media initialisation failed"
    buf =  qtn_msh_note_error_mediainit;
    }

RESOURCE TBUF r_mus_live_sharing_view_note_error_filelock
    {
    //  "Unable to read file"
    buf =  qtn_msh_note_error_filelock;
    }

RESOURCE TBUF r_mus_live_sharing_view_note_error_genericfile
    {
    //  "File error"
    buf =  qtn_msh_note_error_genericfile;
    }

RESOURCE TBUF r_mus_live_sharing_view_note_error_app_general
    {
    //  "Application error"
    buf =  qtn_msh_note_error_app_general;
    }

RESOURCE TBUF r_mus_live_sharing_view_note_startup_failed
    {
    //  "Start-up failed. Reinstall 'Video sharing' application."
    buf =  qtn_msh_note_startup_failed;
    }

RESOURCE TBUF r_mus_live_sharing_view_note_bad_startup_settings
    {
    //  "Start-up failed. Check settings."
    buf =  qtn_msh_note_bad_startup_settings;
    }

RESOURCE TBUF r_mus_live_sharing_view_note_connection_lost
    {
    //  "Disconnected"
    buf =  qtn_msh_note_connection_lost;
    }

RESOURCE TBUF r_mus_live_sharing_view_note_recipient_busy
    {
    //  "Recipient already sharing video. Unable to establish connection."
    buf =  qtn_msh_note_recipient_busy;
    }

RESOURCE TBUF r_mus_live_sharing_view_note_network_n_a
    {
    //  "No network coverage"
    buf =  qtn_msh_note_network_n_a;
    }

RESOURCE TBUF r_mus_live_sharing_view_note_recipient_n_a
    {
    //  "Recipient busy. Try again later."
    buf =  qtn_msh_note_recipient_n_a;
    }

RESOURCE TBUF r_mus_live_sharing_view_note_wrong_address
    {
    //  "Recipient not found. Check the address."
    buf =  qtn_msh_note_wrong_address;
    }

RESOURCE TBUF r_mus_live_sharing_view_note_timeout_expired
    {
    //  "Connection time-out"
    buf =  qtn_msh_note_timeout_expired;
    }

RESOURCE TBUF r_mus_live_sharing_view_note_service_n_a
    {
    //  "Service temporarily unavailable"
    buf =  qtn_msh_note_service_n_a;
    }

RESOURCE TBUF r_mus_live_sharing_view_note_only_3g
    {
    //  "Video Sharing is supported only in 3G network."
    buf = qtn_mshstarter_note_network_incompatible;
    }

RESOURCE TBUF r_mus_live_sharing_view_note_invite_error
    {
    //  "Unable to send invitation"
    buf =  qtn_msh_note_invite_error;
    }

RESOURCE TBUF r_mus_live_sharing_view_note_no_reg
   {
   //  "Unable to register to network"
   buf =  qtn_msh_note_no_reg;
   }

RESOURCE TBUF r_mus_live_sharing_view_note_transcoding_not_supported
    {
    // "Clip is not in correct format. Unable to share."
    buf = qtn_msh_note_transcoding_not_supported;
    }

RESOURCE TBUF r_mus_live_sharing_view_note_sharing_ended
    {
    // "Video sharing ended"
    buf = qtn_msh_note_sharing_ended;
    }

RESOURCE TBUF r_mus_live_sharing_view_note_sharing_ended_record
    {
    // "Video sharing ended. Continue recording?"
    buf = qtn_msh_note_sharing_ended_record;
    }

RESOURCE TBUF r_mus_view_drm_info_send_forbid
    {
    // "Unable to send protected object"
    buf = qtn_drm_info_send_forbid_one;
    }

RESOURCE TBUF r_mus_view_note_memory_low
    {
    // "Memory low. Recording stopped."
    buf = qtn_msh_note_memory_low;
    }

RESOURCE TBUF r_mus_view_note_unable_to_convert
    {
    // "Unable to convert clip"
    buf = qtn_msh_note_transcoding_failed;
    }

RESOURCE TBUF r_mus_note_hf_activated
    {
    // "Handsfree activated"
    buf = qtn_hf_conf_activate;
    }

RESOURCE TBUF r_mus_note_hf_deactivated
    {
    // "Handsfree deactivated"
    buf = qtn_hf_conf_earpiece;
    }

RESOURCE SLIDER r_mus_slider_vertical
    {        
    layout=EAknSliderLayoutVertical;    
    minvalue=0;
    maxvalue=100;
    step=1;
    valuetype=EAknSliderValueNone;    
    minlabel="-";
    maxlabel="+";
    }

RESOURCE SLIDER r_mus_slider_horizontal
    {      
    layout=EAknSliderLayoutHorizontal;
    minvalue=0;
    maxvalue=100;
    step=1;
    valuetype=EAknSliderValueNone;
    }    
        
// end of file

